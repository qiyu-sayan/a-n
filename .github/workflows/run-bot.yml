name: run-bot

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  run:
    runs-on: self-hosted
    timeout-minutes: 12

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv binance-connector

      - name: Prepare logs dir
        run: mkdir -p logs

      - name: Test WeCom webhook (ping before run)
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
          WECOM_WEBHOOK:  ${{ secrets.WECHAT_WEBHOOK }}
        run: |
          set -e
          HOOK="${WECHAT_WEBHOOK:-$WECOM_WEBHOOK}"
          if [ -z "$HOOK" ]; then
            echo "WECHAT_WEBHOOK is empty" && exit 1
          fi
          curl -sS -X POST "$HOOK" -H 'Content-Type: application/json' \
            -d '{"msgtype":"text","text":{"content":"Ping BEFORE run #'"$GITHUB_RUN_NUMBER"'"}}' >/dev/null

      - name: Run bot
        env:
          BINANCE_TESTNET: "1"
          SYMBOLS: "BTCUSDT,ETHUSDT"
          INTERVAL: "1m"
          FAST: "12"
          SLOW: "26"
          RUN_MINUTES: "2"
          ENABLE_TRADING: "0"
          PAPER: "1"
          ORDER_USDT: "10"
          BINANCE_KEY: ${{ secrets.BINANCE_KEY }}
          BINANCE_SECRET: ${{ secrets.BINANCE_SECRET }}
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
          WECOM_WEBHOOK:  ${{ secrets.WECHAT_WEBHOOK }}
        run: |
          set -euo pipefail
          python -u bot/main.py | tee -a "logs/$(date -u +'%Y-%m-%d').log"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ github.run_id }}
          path: logs/

      # ★ 新增：无论成功失败，都把结果和日志尾部推到企微
      - name: Notify WeCom with job result
        if: always()
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
          WECOM_WEBHOOK:  ${{ secrets.WECHAT_WEBHOOK }}
          JOB_STATUS: ${{ job.status }}
        run: |
          HOOK="${WECHAT_WEBHOOK:-$WECOM_WEBHOOK}"
          [ -z "$HOOK" ] && exit 0
          TAIL="$( (tail -n 60 logs/*.log 2>/dev/null) || echo 'no log file' )"
          # 简化/截断，避免超过企微长度
          MSG="Run #${GITHUB_RUN_NUMBER} status: ${JOB_STATUS}\n---- LOG TAIL ----\n${TAIL}"
          # 转义双引号
          MSG_ESC=$(printf "%s" "$MSG" | python - <<'PY'
import sys,json; print(json.dumps({"t":sys.stdin.read()})["t"])
PY
)
          curl -sS -X POST "$HOOK" -H 'Content-Type: application/json' \
            -d "{\"msgtype\":\"text\",\"text\":{\"content\":\"${MSG_ESC[:1900]}\"}}" >/dev/null