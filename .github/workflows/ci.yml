name: run-bot

on:
  # 手动触发
  workflow_dispatch:
  # 每 5 分钟跑一次（Actions 最小粒度是 1 分钟，5 分钟更稳）
  schedule:
    - cron: "*/5 * * * *"
  # 你推送代码时也跑，但忽略 logs 的变更，避免递归触发
  push:
    branches: [ main ]
    paths-ignore:
      - "logs/**"

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # 允许推送日志回仓库

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run bot
        env:
          TZ: Asia/Shanghai
        run: |
          mkdir -p logs
          # 运行你的主程序（在 bot/main.py）
          # 同时把标准输出追加写到按天分割的日志里
          python -u bot/main.py | tee -a logs/$(date -u +%Y-%m-%d).log
        continue-on-error: true  # 即便程序报错也让后续“提交日志”步骤执行

      - name: Commit & push logs
        if: always()  # 无论上一段成功与否都尝试提交日志
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add logs/*.log 2>/dev/null || true
          if ! git diff --cached --quiet; then
            git commit -m "logs: $(date -u +'%F %T')"
            git push
          else
            echo "No log changes to commit."
          fi